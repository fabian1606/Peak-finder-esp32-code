# This is a basic workflow to help you get started with Actions

name: CI

# action is triggered when a new release is created (i.e. a tag is pushed)
on:
  push:
    tags:
      - v* # Push events to matching v*, i.e. v1.0, v20.15.10

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio
    # It is important to first install the libraries before compiling, since otherwise compilation might fail to find the just-installed libraries
    - name: Install platformIO libraries
      run: pio lib install
    - name: Run PlatformIO
      run: platformio run 
      env:
        PLATFORMIO_BUILD_DIR: .pio/build/esp32dev
    # Create a new release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    # Upload the firmware binary as a release asset
    - name: Upload firmware binary
      id: upload-firmware
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PLATFORMIO_BUILD_DIR }}/firmware.bin # The firmware binary is located in the build directory
        asset_name: firmware.bin
        asset_content_type: application/octet-stream

